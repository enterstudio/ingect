{"version":3,"sources":["ingect.js"],"names":["obj","Symbol","constructor","prototype","global","G","opts","arguments","length","undefined","resolve","store","moduleName","_typeof","Error","deps","module","resolved","forEach","depName","push","apply","singleton","_modules","Proxy","get","target","key","set","value","injector"],"mappings":"oFAAA,aAAAA,IACA,SAAAA,GACA,MAAAA,IAAA,kBAAAC,SAAAD,EAAAE,cAAAD,QAAAD,IAAAC,OAAAE,UAAA,eAAAH,KAGA,SAAAI,GACA,YAEAA,GAAAC,EAAA,WARA,GAAAC,GAAAC,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,MAEAG,EAAA,QAAAA,GAAAC,EAAAC,GACA,GAAA,WAAAC,QAAAF,EAAAC,IACA,KAAA,IAAAE,OAAAF,EAAA,kBAGA,IAAAG,MACAC,EAAAL,EAAAC,GAAAK,QAmBA,OAjBAR,UAAAO,IACAL,EAAAC,GAAAG,KAAAG,QAAA,SAAAC,GACA,MAAA,YAAAA,GAAA,WAAAN,QAAAF,EAAAQ,QACAJ,GAAAK,KAAAhB,OAIAW,GAAAK,KAAAV,EAAAC,EAAAQ,MAIAH,EAAAL,EAAAC,GAAAI,OAAAK,MAAA,KAAAN,GACAT,EAAAgB,YACAX,EAAAC,GAAAK,SAAAD,IAIAA,GAGAO,EAAA,GAAAC,WACAC,IAAA,SAAAC,EAAAC,GACA,MAAAjB,GAAAgB,EAAAC,IAEAC,IAAA,SAAAF,EAAAC,EAAAE,GACA,GAAApB,SAAAiB,EAAAC,GACA,KAAA,IAAAb,OAAA,0BAAAa,EAAA,kBAKA,OAFAD,GAAAC,GAAAE,GAEA,KAIAC,EAAA,SAAAlB,EAAAI,GACA,GAAAD,GAAAR,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,KAGA,OAAA,KAAAA,UAAAC,OACAe,EAAAX,QAGAW,EAAAX,IACAI,OAAAA,EACAD,KAAAA","file":"ingect.min.js","sourcesContent":["/*\n  ingect v0.0.5\n  \n\n  @author:  Pasquale Boemio <boemianrapsodi@gmail.com>\n  @license: MIT\n*/\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function(obj) {\n  return typeof obj;\n} : function(obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n(function(global) {\n  'use strict';\n\n  global.G = function() {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var resolve = function resolve(store, moduleName) {\n      if (_typeof(store[moduleName]) !== 'object') {\n        throw new Error(moduleName + ' is not defined');\n      }\n\n      var deps = [];\n      var module = store[moduleName].resolved;\n\n      if (module === undefined) {\n        store[moduleName].deps.forEach(function(depName) {\n          if (depName === '$global' && _typeof(store[depName]) !== 'object') {\n            deps.push(global);\n            return;\n          }\n\n          deps.push(resolve(store, depName));\n          return;\n        });\n\n        module = store[moduleName].module.apply(null, deps);\n        if (opts.singleton) {\n          store[moduleName].resolved = module;\n        }\n      }\n\n      return module;\n    };\n\n    var _modules = new Proxy({}, {\n      get: function get(target, key) {\n        return resolve(target, key);\n      },\n      set: function set(target, key, value) {\n        if (target[key] !== undefined) {\n          throw new Error('A module with the name ' + key + ' already exists');\n        }\n\n        target[key] = value;\n\n        return true;\n      }\n    });\n\n    var injector = function injector(moduleName, module) {\n      var deps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n\n      if (arguments.length === 1) {\n        return _modules[moduleName];\n      }\n\n      _modules[moduleName] = {\n        module: module,\n        deps: deps\n      };\n    };\n\n    return injector;\n  };\n})(this);"]}